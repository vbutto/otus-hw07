@echo off
echo üèóÔ∏è Building Cloud Functions for Weather Forecast Service...
echo.

REM –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø–∞–ø–æ–∫
if not exist "static" mkdir static
if not exist "temp" mkdir temp
if not exist "temp\weather_context" mkdir temp\weather_context
if not exist "temp\weather_forecast" mkdir temp\weather_forecast

echo üìÑ Creating static files...

REM ============================================================================
REM –°–æ–∑–¥–∞–Ω–∏–µ HTML —Å—Ç—Ä–∞–Ω–∏—Ü—ã (–µ—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
REM ============================================================================
if not exist "static\index.html" (
    echo Creating static\index.html...
    echo. > static\index.html
) else (
    echo static\index.html already exists, skipping creation...
)

echo ‚úì Static files ready

REM ============================================================================
REM Function 1: Weather Context
REM ============================================================================
echo üîß Building weather-context function...

REM –ö–æ–ø–∏—Ä—É–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ Function 1
copy function1_weather_context.py temp\weather_context\index.py > nul
if errorlevel 1 (
    echo ‚ùå Error: function1_weather_context.py not found!
    echo Please make sure the file exists in the current directory.
    pause
    exit /b 1
)

REM –°–æ–∑–¥–∞–µ–º requirements.txt –¥–ª—è Function 1
echo psycopg2-binary==2.9.7 > temp\weather_context\requirements.txt
echo requests==2.31.0 >> temp\weather_context\requirements.txt

REM –°–æ–∑–¥–∞–µ–º ZIP –∞—Ä—Ö–∏–≤ –¥–ª—è Function 1
cd temp\weather_context
if exist "..\..\weather_context.zip" del "..\..\weather_context.zip"

REM –ò—Å–ø–æ–ª—å–∑—É–µ–º PowerShell –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è ZIP –∞—Ä—Ö–∏–≤–∞
powershell -command "Compress-Archive -Path '.\*' -DestinationPath '..\..\weather_context.zip' -Force"
if errorlevel 1 (
    echo ‚ùå Error creating weather_context.zip
    cd ..\..
    pause
    exit /b 1
)

cd ..\..
echo ‚úì weather_context.zip created

REM ============================================================================
REM Function 2: Weather Forecast
REM ============================================================================
echo üå§Ô∏è Building weather-forecast function...

REM –ö–æ–ø–∏—Ä—É–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π –∫–æ–¥ Function 2
copy function2_weather_forecast.py temp\weather_forecast\index.py > nul
if errorlevel 1 (
    echo ‚ùå Error: function2_weather_forecast.py not found!
    echo Please make sure the file exists in the current directory.
    pause
    exit /b 1
)

REM –°–æ–∑–¥–∞–µ–º requirements.txt –¥–ª—è Function 2
echo requests==2.31.0 > temp\weather_forecast\requirements.txt

REM –°–æ–∑–¥–∞–µ–º ZIP –∞—Ä—Ö–∏–≤ –¥–ª—è Function 2
cd temp\weather_forecast
if exist "..\..\weather_forecast.zip" del "..\..\weather_forecast.zip"

REM –ò—Å–ø–æ–ª—å–∑—É–µ–º PowerShell –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è ZIP –∞—Ä—Ö–∏–≤–∞
powershell -command "Compress-Archive -Path '.\*' -DestinationPath '..\..\weather_forecast.zip' -Force"
if errorlevel 1 (
    echo ‚ùå Error creating weather_forecast.zip
    cd ..\..
    pause
    exit /b 1
)

cd ..\..
echo ‚úì weather_forecast.zip created

REM ============================================================================
REM –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
REM ============================================================================
echo üßπ Cleaning up temporary files...
rmdir /s /q temp

echo.
echo üéâ All components built successfully!
echo.
echo üì¶ Files created:
echo   - static\index.html - Simple HTML page with auto geolocation
echo   - weather_context.zip - Function 1 (Context ^& DB)
echo   - weather_forecast.zip - Function 2 (Weather API)
echo.
echo üöÄ Next steps:
echo   1. terraform init
echo   2. terraform plan
echo   3. terraform apply
echo.
echo üåê After deployment, access your app at:
echo   https://YOUR-API-GATEWAY-ID.apigw.yandexcloud.net
echo.
echo ‚ö†Ô∏è Required files:
echo   - function1_weather_context.py
echo   - function2_weather_forecast.py
echo   - static\index.html (will be created if missing)
echo.
pause